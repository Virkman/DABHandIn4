--
-- Target: Microsoft SQL Server 
-- Syntax: isql /Uuser /Ppassword /Sserver -i\path\filename.sql
-- Date  : Dec 09 2018 14:43
-- Script Generated by Database Design Studio 2.21.3 
--


--
-- Select Database: 'db_name'
--
USE db_name
GO
 
IF DB_NAME() = 'db_name'
    RAISERROR('''db_name'' DATABASE CONTEXT NOW IN USE.',1,1)
ELSE
    RAISERROR('ERROR IN BATCH FILE, ''USE db_name'' FAILED!  KILLING THE SPID NOW.',22,127) WITH LOG
 
GO
EXECUTE SP_DBOPTION 'db_name' ,'TRUNC. LOG ON CHKPT.' ,'TRUE'
GO

--
-- Create Table    : 'SmartMeter'   
-- SmartMeterId    :  
--
CREATE TABLE SmartMeter (
    SmartMeterId   BIGINT IDENTITY(1,1) NOT NULL,
CONSTRAINT pk_SmartMeter PRIMARY KEY CLUSTERED (SmartMeterId))
GO

--
-- Create Table    : 'Elkilde'   
-- ElkildeId       :  
-- Type            :  
--
CREATE TABLE Elkilde (
    ElkildeId      BIGINT IDENTITY(1,1) NOT NULL,
    Type           VARCHAR NOT NULL,
CONSTRAINT pk_Elkilde PRIMARY KEY CLUSTERED (ElkildeId))
GO

--
-- Create Table    : 'Type'   
-- TypeId          :  
-- TypeNavn        :  
--
CREATE TABLE Type (
    TypeId         BIGINT IDENTITY(1,1) NOT NULL,
    TypeNavn       VARCHAR NOT NULL,
CONSTRAINT pk_Type PRIMARY KEY CLUSTERED (TypeId))
GO

--
-- Create Table    : 'SmartEnhed'   
-- SmartEnhedId    :  
-- ProsumerId      :  
-- SmartMeterId    :  (references SmartMeter.SmartMeterId)
-- TypeId          :  (references Type.TypeId)
--
CREATE TABLE SmartEnhed (
    SmartEnhedId   BIGINT IDENTITY(1,1) NOT NULL,
    ProsumerId     BIGINT NOT NULL,
    SmartMeterId   BIGINT NOT NULL,
    TypeId         BIGINT NOT NULL,
CONSTRAINT pk_SmartEnhed PRIMARY KEY CLUSTERED (SmartEnhedId),
CONSTRAINT fk_SmartEnhed FOREIGN KEY (SmartMeterId)
    REFERENCES SmartMeter (SmartMeterId)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
CONSTRAINT fk_SmartEnhed2 FOREIGN KEY (TypeId)
    REFERENCES Type (TypeId)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Adresse'   
-- AdresseId       :  
-- Vejnavn         :  
-- Husnummer       :  
-- Postnummer      :  
-- Bynavn          :  
-- SmartEnhedId    :  (references SmartEnhed.SmartEnhedId)
--
CREATE TABLE Adresse (
    AdresseId      BIGINT IDENTITY(1,1) NOT NULL,
    Vejnavn        VARCHAR NOT NULL,
    Husnummer      CHAR NOT NULL,
    Postnummer     CHAR NOT NULL,
    Bynavn         VARCHAR NOT NULL,
    SmartEnhedId   BIGINT NOT NULL,
CONSTRAINT pk_Adresse PRIMARY KEY CLUSTERED (AdresseId),
CONSTRAINT fk_Adresse FOREIGN KEY (SmartEnhedId)
    REFERENCES SmartEnhed (SmartEnhedId)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Har'   
-- SmartEnhedId    :  (references SmartEnhed.SmartEnhedId)
-- ElkildeId       :  (references Elkilde.ElkildeId)
-- Antal           :  
--
CREATE TABLE Har (
    SmartEnhedId   BIGINT NOT NULL,
    ElkildeId      BIGINT NOT NULL,
    Antal          INT NOT NULL,
CONSTRAINT pk_Har PRIMARY KEY CLUSTERED (SmartEnhedId,ElkildeId),
CONSTRAINT fk_Har FOREIGN KEY (SmartEnhedId)
    REFERENCES SmartEnhed (SmartEnhedId)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_Har2 FOREIGN KEY (ElkildeId)
    REFERENCES Elkilde (ElkildeId)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Permissions for: 'public'
--
GRANT ALL ON SmartMeter TO public
GO
GRANT ALL ON Elkilde TO public
GO
GRANT ALL ON Type TO public
GO
GRANT ALL ON SmartEnhed TO public
GO
GRANT ALL ON Adresse TO public
GO
GRANT ALL ON Har TO public
GO

